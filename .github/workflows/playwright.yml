name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  E2E_BASE_URL: ${{ vars.BASE_URL }}
  API_BASE_URL: ${{ vars.API_BASE_URL }}

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.project }}
      
      - name: Run E2E tests
        env:
          E2E_BASE_URL: ${{ env.E2E_BASE_URL }}
          API_BASE_URL: ${{ env.API_BASE_URL }}
        run: npm run test -- --project=${{ matrix.project }}
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.project }}
          path: test-results/
          retention-days: 7
      
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.project }}
          path: reports/html/
          retention-days: 30
      
      - name: Upload JSON report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-json-${{ matrix.project }}
          path: reports/json/
          retention-days: 30
      
      - name: Upload JUnit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-junit-${{ matrix.project }}
          path: reports/junit/
          retention-days: 30
      
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always() && matrix.project == 'chromium'
        with:
          files: reports/junit/*.xml
          check_name: Test Results
          comment_mode: off
  
  api-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run API tests
        env:
          API_BASE_URL: ${{ env.API_BASE_URL }}
        run: npm run test:api
      
      - name: Upload API test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: api-test-results
          path: reports/
          retention-days: 30
